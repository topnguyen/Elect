<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elect.Web.Swagger</name>
    </assembly>
    <members>
        <member name="P:Elect.Web.Swagger.Attributes.ApiParameterAttribute.Name">
            <summary>
            REQUIRED. The name of the parameter. Parameter names are case sensitive.
            If in is "path", the name field MUST correspond to the associated path segment from the path field in the Paths Object.
            If in is "header" and the name field is "Accept", "Content-Type" or "Authorization", the parameter definition SHALL be ignored.
            For all other cases, the name corresponds to the parameter name used by the in property.
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Attributes.ApiParameterAttribute.In">
            <summary>
            REQUIRED. The location of the parameter.
            Possible values are "query", "header", "path" or "cookie".
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Attributes.ApiParameterAttribute.Description">
            <summary>
            A brief description of the parameter. This could contain examples of use.
            CommonMark syntax MAY be used for rich text representation.
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Attributes.ApiParameterAttribute.Required">
            <summary>
            Determines whether this parameter is mandatory.
            If the parameter location is "path", this property is REQUIRED and its value MUST be true.
            Otherwise, the property MAY be included and its default value is false.
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Attributes.ApiParameterAttribute.AllowEmptyValue">
            <summary>
            Sets the ability to pass empty-valued parameters.
            This is valid only for query parameters and allows sending a parameter with an empty value.
            Default value is false.
            If style is used, and if behavior is n/a (cannot be serialized),
            the value of allowEmptyValue SHALL be ignored.
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Attributes.ApiParameterAttribute.Style">
            <summary>
            Describes how the parameter value will be serialized depending on the type of the parameter value.
            Default values (based on value of in): for query - form; for path - simple; for header - simple;
            for cookie - form.
            </summary>
        </member>
        <member name="T:Elect.Web.Swagger.IApplicationBuilderExtensions.ElectSwaggerMiddleware">
            <summary>
                Keep swagger access middleware before UseSwagger and UseSwaggerUI to wrap a request 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.SwaggerRoutePrefix">
            <summary>
                Swagger Endpoint, default is "/developers/api-docs". 
            </summary>
            <remarks> Must start with "/" </remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.SwaggerName">
            <summary>
                Swagger name, default is "all" 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.Url">
            <summary>
                Api Document Endpoint, default is "/developers". 
            </summary>
            <remarks> Must start with "/" </remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.JsonViewerUrl">
            <summary>
                Json Viewer Endpoint, Default is "/developers/json-viewer". 
            </summary>
            <remarks> Must start with "/" </remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.Title">
            <summary>
                Api Document Title. Default is "API Document" 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.Version">
            <summary>
                Api Document Version. Ex: latest, v1, v2 and so on. Default is "latest" 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.AccessKey">
            <summary>
                Access Key via uri param "key", default is "" - allow anonymous. 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.UnAuthorizeMessage">
            <summary>
                Un-authorize message when user access api document with not correct key. Default is
                "You don't have permission to view API Document, please contact your administrator."
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.AuthTokenType">
            <summary>
                Authenticate Token Type, default is "Bearer". 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.IsFullSchemaForType">
            <summary>
                Show full schema for each type in Document 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.ExtendOptions">
            <summary>
                Additional Options if you want to add your customize (Operation Filter, Document
                Filter and so on) after Elect add Swagger Options.
            </summary>
        </member>
        <member name="F:Elect.Web.Swagger.Utils.Bootstrapper.Lazy">
            <summary>
                A new instance of the <see cref="T:.Web.Config.Config" /> class. with lazy initialization. 
            </summary>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.Bootstrapper.#ctor">
            <summary>
                Prevents a default instance of the <see cref="T:Elect.Web.Swagger.Utils.Bootstrapper" /> class from being created. 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Utils.Bootstrapper.Instance">
            <summary>
                Gets the current instance of the <see cref="T:Elect.Web.Swagger.Utils.Bootstrapper" /> class. 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Utils.Bootstrapper.WorkingFolder">
            <summary>
                Gets the working directory path. 
            </summary>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.Bootstrapper.RegisterExecutable">
            <summary>
                Registers the embedded executable. 
            </summary>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerGenOptionsUtils.SwaggerGenOptionsExtensions.IncludeXmlCommentsIfExists(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions,System.Reflection.Assembly)">
            <summary>
                Includes the XML comment file if it has the same name as the assembly, a .xml file
                extension and exists in the same directory as the assembly.
            </summary>
            <param name="swaggerGenOptions"> The Swagger options. </param>
            <param name="assembly">          The assembly. </param>
            <returns>
                <c> true </c> if the comment file exists and was added, otherwise <c> false </c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"> options or assembly. </exception>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerGenOptionsUtils.SwaggerGenOptionsExtensions.IncludeXmlCommentsIfExists(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions,System.String)">
            <summary>
                Includes the XML comment file if it exists at the specified file path. 
            </summary>
            <param name="options">  The Swagger options. </param>
            <param name="filePath"> The XML comment file path. </param>
            <returns>
                <c> true </c> if the comment file exists and was added, otherwise <c> false </c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"> options or filePath. </exception>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerGenOptionsUtils.SwaggerGenOptionsHelper.IncludeXmlCommentsIfExists(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions,System.Reflection.Assembly)">
            <summary>
                Includes the XML comment file if it has the same name as the assembly, a .xml file
                extension and exists in the same directory as the assembly.
            </summary>
            <param name="options">  The Swagger options. </param>
            <param name="assembly"> The assembly. </param>
            <returns>
                <c> true </c> if the comment file exists and was added, otherwise <c> false </c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"> options or assembly. </exception>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerGenOptionsUtils.SwaggerGenOptionsHelper.IncludeXmlCommentsIfExists(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions,System.String)">
            <summary>
                Includes the XML comment file if it exists at the specified file path. 
            </summary>
            <param name="options">  The Swagger options. </param>
            <param name="filePath"> The XML comment file path. </param>
            <returns>
                <c> true </c> if the comment file exists and was added, otherwise <c> false </c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"> options or filePath. </exception>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerHelper.IsCanAccessSwagger(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
                Case sensitive compare for key access 
            </summary>
            <param name="httpContext"></param>
            <param name="accessKey">  </param>
            <returns></returns>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerHelper.IsAccessSwagger(Microsoft.AspNetCore.Http.HttpContext,Elect.Web.Swagger.Models.ElectSwaggerOptions)">
            <summary>
                Check request access to UI, Json Viewer or Swagger Pure Doc 
            </summary>
            <param name="httpContext"></param>
            <param name="options">    </param>
            <returns></returns>
        </member>
    </members>
</doc>
