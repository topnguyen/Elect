<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elect.Web.Swagger</name>
    </assembly>
    <members>
        <member name="P:Elect.Web.Swagger.Attributes.ApiParameterAttribute.In">
            <summary>
                In is a place the parameter will pass to server, in formData by default
            </summary>
            <remarks>You can use <see cref="T:Elect.Web.Swagger.Models.ParameterIn"/> to prevent spell issue</remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Attributes.ApiParameterAttribute.Type">
            <summary>
                Type can be "string", "file", "number" and so on, see more at https://swagger.io/docs/specification/describing-parameters/
            </summary>
            <remarks>You can use <see cref="T:Elect.Web.Swagger.Models.ParameterType"/> to prevent spell issue</remarks>
        </member>
        <member name="T:Elect.Web.Swagger.IApplicationBuilderExtensions.ElectSwaggerMiddleware">
            <summary>
                Keep swagger access middleware before UseSwagger and UseSwaggerUI to wrap a request 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ApiGlobalParameterModel.In">
            <summary>
                In is a place the parameter will pass to server, in formData by default
            </summary>
            <remarks>You can use <see cref="T:Elect.Web.Swagger.Models.ParameterIn"/> to prevent spell issue</remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ApiGlobalParameterModel.Type">
            <summary>
                Type can be "string", "file", "number" and so on, see more at https://swagger.io/docs/specification/describing-parameters/
            </summary>
            <remarks>You can use <see cref="T:Elect.Web.Swagger.Models.ParameterType"/> to prevent spell issue</remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.SwaggerRoutePrefix">
            <summary>
                Swagger Endpoint, default is "/developers/api-docs". 
            </summary>
            <remarks> Must start with "/" </remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.SwaggerName">
            <summary>
                Swagger name, default is "all" 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.Url">
            <summary>
                Api Document Endpoint, default is "/developers". 
            </summary>
            <remarks> Must start with "/" </remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.JsonViewerUrl">
            <summary>
                Json Viewer Endpoint, Default is "/developers/json-viewer". 
            </summary>
            <remarks> Must start with "/" </remarks>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.Title">
            <summary>
                Api Document Title. Default is "API Document" 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.Version">
            <summary>
                Api Document Version. Ex: latest, v1, v2 and so on. Default is "latest" 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.AccessKey">
            <summary>
                Access Key via uri param "key", default is "" - allow anonymous. 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.UnAuthorizeMessage">
            <summary>
                Un-authorize message when user access api document with not correct key. Default is
                "You don't have permission to view API Document, please contact your administrator."
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.AuthTokenType">
            <summary>
                Authenticate Token Type, default is "Bearer". 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.IsFullSchemaForType">
            <summary>
                Show full schema for each type in Document 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.IsDescribeAllEnumsAsString">
            <summary>
                Default is true. 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.IsDescribeAllParametersInCamelCase">
            <summary>
                Default is true. 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Models.ElectSwaggerOptions.ExtendOptions">
            <summary>
                Additional Options if you want to add your customize (Operation Filter, Document
                Filter and so on) after Elect add Swagger Options.
            </summary>
        </member>
        <member name="F:Elect.Web.Swagger.Utils.Bootstrapper.Lazy">
            <summary>
                A new instance of the <see cref="T:.Web.Config.Config" /> class. with lazy initialization. 
            </summary>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.Bootstrapper.#ctor">
            <summary>
                Prevents a default instance of the <see cref="T:Elect.Web.Swagger.Utils.Bootstrapper" /> class from being created. 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Utils.Bootstrapper.Instance">
            <summary>
                Gets the current instance of the <see cref="T:Elect.Web.Swagger.Utils.Bootstrapper" /> class. 
            </summary>
        </member>
        <member name="P:Elect.Web.Swagger.Utils.Bootstrapper.WorkingFolder">
            <summary>
                Gets the working directory path. 
            </summary>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.Bootstrapper.RegisterExecutable">
            <summary>
                Registers the embedded executable. 
            </summary>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerGenOptionsUtils.SwaggerGenOptionsExtensions.IncludeXmlCommentsIfExists(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions,System.Reflection.Assembly)">
            <summary>
                Includes the XML comment file if it has the same name as the assembly, a .xml file
                extension and exists in the same directory as the assembly.
            </summary>
            <param name="swaggerGenOptions"> The Swagger options. </param>
            <param name="assembly">          The assembly. </param>
            <returns>
                <c> true </c> if the comment file exists and was added, otherwise <c> false </c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"> options or assembly. </exception>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerGenOptionsUtils.SwaggerGenOptionsExtensions.IncludeXmlCommentsIfExists(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions,System.String)">
            <summary>
                Includes the XML comment file if it exists at the specified file path. 
            </summary>
            <param name="options">  The Swagger options. </param>
            <param name="filePath"> The XML comment file path. </param>
            <returns>
                <c> true </c> if the comment file exists and was added, otherwise <c> false </c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"> options or filePath. </exception>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerGenOptionsUtils.SwaggerGenOptionsHelper.IncludeXmlCommentsIfExists(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions,System.Reflection.Assembly)">
            <summary>
                Includes the XML comment file if it has the same name as the assembly, a .xml file
                extension and exists in the same directory as the assembly.
            </summary>
            <param name="options">  The Swagger options. </param>
            <param name="assembly"> The assembly. </param>
            <returns>
                <c> true </c> if the comment file exists and was added, otherwise <c> false </c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"> options or assembly. </exception>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerGenOptionsUtils.SwaggerGenOptionsHelper.IncludeXmlCommentsIfExists(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions,System.String)">
            <summary>
                Includes the XML comment file if it exists at the specified file path. 
            </summary>
            <param name="options">  The Swagger options. </param>
            <param name="filePath"> The XML comment file path. </param>
            <returns>
                <c> true </c> if the comment file exists and was added, otherwise <c> false </c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"> options or filePath. </exception>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerHelper.IsCanAccessSwagger(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
                Case sensitive compare for key access 
            </summary>
            <param name="httpContext"></param>
            <param name="accessKey">  </param>
            <returns></returns>
        </member>
        <member name="M:Elect.Web.Swagger.Utils.SwaggerHelper.IsAccessSwagger(Microsoft.AspNetCore.Http.HttpContext,Elect.Web.Swagger.Models.ElectSwaggerOptions)">
            <summary>
                Check request access to UI, Json Viewer or Swagger Pure Doc 
            </summary>
            <param name="httpContext"></param>
            <param name="options">    </param>
            <returns></returns>
        </member>
    </members>
</doc>
